<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:view="edu.isi.bmkeg.digitalLibraryModule.view.*"
		 xmlns:hc="com.hillelcoren.components.*"
		 xmlns:classes="com.hillelcoren.components.autoComplete.classes.*"
		 width="100%"
		 height="100%">	
	
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<fx:Style>
		.facebook {
			over-skin: ClassReference("edu.isi.bmkeg.digitalLibraryModule.view.TermSkin");
			up-skin: ClassReference("edu.isi.bmkeg.digitalLibraryModule.view.TermSkin");
			down-skin: ClassReference("edu.isi.bmkeg.digitalLibraryModule.view.TermSkin");
			selected-over-skin : ClassReference("edu.isi.bmkeg.digitalLibraryModule.view.TermSkin");
			selected-up-skin: ClassReference("edu.isi.bmkeg.digitalLibraryModule.view.TermSkin");
			selected-down-skin : ClassReference("edu.isi.bmkeg.digitalLibraryModule.view.TermSkin");
			padding-top: 0;
			padding-bottom: 0;
			text-selected-color: #FFFFFF;
			padding-left: 8;
			padding-right: 8;
			font-weight: normal;              
		}
	</fx:Style>
	
	<fx:Declarations>
		<fx:Component id="dropDownTermRenderer">
			<view:TermItemRenderer selectedItems="{ outerDocument.autoComplete.selectedItems }" />
		</fx:Component>
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import edu.isi.bmkeg.digitalLibrary.events.ChangeFragmentType;
			import edu.isi.bmkeg.ftd.model.*;
			import edu.isi.bmkeg.utils.ColorPalette;
			
			import mx.collections.*;
			import mx.collections.ArrayCollection;
			import mx.controls.SWFLoader;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;

			public var ftd:FTD;
			
			[Bindable]
			public var bitmaps:ArrayCollection = new ArrayCollection;
			
			[Bindable]
			public var terms:ArrayCollection;
			
			[Bindable] 
			public var frgType:String;
			
			public var colorLookup:Object = new Object;
			
			private static var swfClass:Class;
						
			private function handleAutoCompleteChange():void
			{
				var term:Object = autoComplete.selectedItem;
				
				if (term != null && term.hasOwnProperty( "colorId" )) {
					this.dispatchEvent( new ChangeFragmentType(term.tree) );
				} else { 
					this.dispatchEvent( new ChangeFragmentType("") );					
				}
				
			}
			
		]]>
	</fx:Script>
	
	<hc:AutoComplete id="autoComplete" 
					 dataProvider="{ terms }" 
					 labelField="tree" 
					 matchType="anyPart" 
					 prompt="Start typing to select an annotation term" 
					 width="100%" change="{ handleAutoCompleteChange() }"
					 allowNewValues="true"  
					 selectedItemStyleName="{ AutoComplete.STYLE_FACEBOOK }" 
					 allowDuplicates="false"
					 allowMultipleSelection="false"
					 allowEditingNewValues="true" 
					 dropDownItemRenderer="{ dropDownTermRenderer }"
					 backspaceAction="focus"/>
	
	<s:List id="pgList"			
			width="100%"
			height="100%"
			itemRenderer="edu.isi.bmkeg.digitalLibraryModule.view.FragmenterPageRenderer"
			dataProvider="{bitmaps}">
		<s:layout>
			<s:VerticalLayout gap="0" 
							  horizontalAlign="left" 
							  verticalAlign="top"/>
		</s:layout>
	</s:List>	
</s:Group>

