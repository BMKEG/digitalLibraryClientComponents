<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="1000" height="300">
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:AsyncListView id="asyncListView" list="{citationsList}" createPendingItemFunction="createPendingItem"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import edu.isi.bmkeg.digitalLibrary.citations.events.UserRequestCitationsListSelectionChangeEvent;
			import edu.isi.bmkeg.digitalLibrary.model.citations.ArticleCitation;
			import edu.isi.bmkeg.digitalLibrary.model.citations.Journal;
			
			import mx.collections.ArrayCollection;
			import mx.collections.IList;
			import mx.collections.errors.ItemPendingError;
			
			import spark.events.GridSelectionEvent;
			
			private var _citationsCollection:IList;
			
			[Bindable]
			public function get citationsList():IList
			{
				return _citationsCollection;
			}
			
			public function set citationsList(v:IList):void
			{
				_citationsCollection = v;
			}
			
			public function get selectedIndex():int
			{
				return citationListDataGrid.selectedIndex;
			}
			
			public function set selectedIndex(v:int):void 
			{
				citationListDataGrid.setSelectedIndex(v);
			}
			
			public function clearSelection():void
			{
				citationListDataGrid.clearSelection();
			}
			
			private function authorsFormatter(item:Object, column:GridColumn):String
			{
				var cit:ArticleCitation = item as ArticleCitation;
				if (cit)
				{
					var authors:ArrayCollection = cit.authorList;
					if (authors)
					{
						return ViewHelper.formatAuthors(authors);	
					}
				}
				return null;
			}
			
			private function publicationFormatter(item:Object, column:GridColumn):String
			{
				var cit:ArticleCitation = item as ArticleCitation;
				if (cit)
				{
					var journal:Journal = cit.journal;
					if (journal)
					{
						return journal.abbr;	
					}
				}
				return null;
			}
			
			private function selectionChangeHandler(event:GridSelectionEvent):void
			{
				var i:int = citationListDataGrid.selectedIndex;
				dispatchEvent(new UserRequestCitationsListSelectionChangeEvent(i));
			}
			
			private function createPendingItem(index:int, ipe:ItemPendingError):Object
			{
				return {title: "... fetching citation ..."};        
			}
		]]>
	</fx:Script>
	<s:DataGrid id="citationListDataGrid" width="100%" height="100%" dataProvider="{asyncListView}"
				selectionMode="multipleRows"
				selectionChange="selectionChangeHandler(event)"
				sortableColumns="false">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn headerText=" " width="50" 
							  itemRenderer="edu.isi.bmkeg.digitalLibrary.citations.view.ActionControlCitationListItemRenderer"/>
				<s:GridColumn headerText="Authors" dataField="authorList"
							  labelFunction="authorsFormatter" dataTipFunction="authorsFormatter"
							  showDataTips="true"
							  width="200"/>
				<s:GridColumn headerText="Title" 
							  dataField="title" 
							  showDataTips="true"/>
				<s:GridColumn headerText="Year" width="70"
							  dataField="pubYear"/>
				<s:GridColumn headerText="Published in"  
							  labelFunction="publicationFormatter"
							  dataTipFunction="publicationFormatter"
							  showDataTips="true"/>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
</s:Group>
